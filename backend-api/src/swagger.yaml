openapi: 3.0.0
info:
  title: API Rest Clientes
  description: API Rest
  version: 1.0.0

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /teste:
    get:
      summary: Endpoint de teste
      security: [{bearerAuth: []}]
      responses:
        '200':
          description: Resposta bem-sucedida
          content:
            application/json:
              example: { "ok": true }
        '401':
          description: Não autorizado
          content:
            application/json:
              example: { "error": "Token inválido ou expirado" }  

  /customer:
    post:
      summary: Criar um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            example:
              nome: "Nome do Cliente"
              email: "cliente@example.com"
              CPF: "123.456.789-01"
              telefone: "(11) 98765-4321"
              usuario: "nome_usuario"
              senha: "senha123"
              confirm_senha: "senha123"
      responses:
        '200':
          description: Cliente criado com sucesso
          content:
            application/json:
              example:
                customer:
                  id: 1
                  nome: "Nome do Cliente"
                  email: "cliente@example.com"
                  CPF: "123.456.789-01"
                  telefone: "(11) 98765-4321"
                  usuario: "nome_usuario"
        '400':
          description: Erro de solicitação inválida
          content:
            application/json:
              example: { "error": "Preencha todos os campos" }
        '401':
          description: Erro de autenticação
          content:
            application/json:
              example: { "error": "Credenciais inválidas" }
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              example: { "error": "Erro no servidor" }

  /login:
    post:
      summary: Autenticar um usuário
      requestBody:
        required: true
        content:
          application/json:
            example:
              usuario: "nome_usuario"
              senha: "senha123"
      responses:
        '200':
          description: Autenticação bem-sucedida
          content:
            application/json:
              example:
                accessToken: "jwt_token"
                refreshToken: "jwt_refresh_token"
        '400':
          description: Erro de solicitação inválida
          content:
            application/json:
              example: { "error": "Usuário e senha são obrigatórios" }
        '401':
          description: Erro de autenticação
          content:
            application/json:
              example: { "error": "Usuário não encontrado" }
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              example: { "error": "Erro no servidor" }

  /refresh-token:
    post:
      summary: Renovar o token de acesso
      requestBody:
        required: true
        content:
          application/json:
            example:
              refreshToken: "jwt_refresh_token"
      responses:
        '200':
          description: Token renovado com sucesso
          content:
            application/json:
              example:
                accessToken: "novo_jwt_token"
                refreshToken: "novo_jwt_refresh_token"
        '400':
          description: Erro de solicitação inválida
          content:
            application/json:
              example: { "error": "Refresh token inválido ou não fornecido" }
        '401':
          description: Não autorizado
          content:
            application/json:
              example: { "error": "Refresh token expirado ou não corresponde ao usuário" }
        '500':
          description: Erro interno do servidor
          content:
            application/json:
              example: { "error": "Erro no servidor" }
